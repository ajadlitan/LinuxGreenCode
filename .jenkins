pipeline {
    agent any
    
    environment {
	    PROJECT_NAME = "Sample Application"
		REPO_PATH = "\\var\\lib\\jenkins\\workspace\\GreenCode"
		PYTHON_PATH = "\\usr\\bin\\python3"
		PYTEST_PATH = "\\usr\\bin\\pytest"
		PATH = "\\usr\\share\\maven\\bin\\;$PATH"
	}
    
    stages {
        stage('Stage 1: Clone Repository') {
            steps {
                echo "Project Name: ${env.PROJECT_NAME}"
                ws("${env.REPO_PATH}") {
                    git branch: 'main', credentialsId: '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', url: 'https://github.com/ajadlitan/LinuxGreenCode.git'
                }
            }
        }
        stage('Stage 2: Track Server Emissions') {
            steps {
                dir("${env.REPO_PATH}") {
                    catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
                        bat "${env.PYTHON_PATH} server_emissions.py"
                    }
                }
            }
        }
        stage('Stage 3: Green Code Refiner') {
            steps {
                dir("${env.REPO_PATH}") {
                    catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
                        bat "${env.PYTHON_PATH} GreenCodeRefiner.py"
                    }
                }
            }
        }
     
        stage('Stage 4: Dynamic Code Analysis & Report Generate') {
            steps {
                dir("${env.REPO_PATH}") {
                    withEnv(["PYTEST=${env.PYTEST_PATH}"]) {
                        catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
                            bat "${env.PYTHON_PATH} track_emissions.py"
                        }
                    }
                }
            }
        }
        
    }
}
